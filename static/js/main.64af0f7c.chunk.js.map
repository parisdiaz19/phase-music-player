{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setSongs","setCurrentSong","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","name","artist","LibrarySong","selectedSong","songSelectHandler","filter","state","alt","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64af0f7c.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Player = ({\r\n    audioRef, \r\n    currentSong, \r\n    isPlaying, \r\n    setIsPlaying, \r\n    setSongInfo, \r\n    songInfo, \r\n    songs, \r\n    setSongs,\r\n    setCurrentSong,\r\n}) => {\r\n    //use Effect\r\n    useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n        if(song.id === currentSong.id) {\r\n            return {\r\n                ...song,\r\n                active: true,\r\n            };\r\n        } else {\r\n            return {\r\n                ...song,\r\n                active: false,\r\n            };\r\n        }\r\n    });\r\n    setSongs(newSongs);\r\n}, [currentSong]);\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n    \r\n\r\n    \r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value\r\n        setSongInfo({...songInfo, currentTime: e.target.value});\r\n    };\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if (direction === 'skip-forward') {\r\n          await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if (direction === 'skip-back') {\r\n            if((currentIndex - 1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length -1]);\r\n                if(isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n    };\r\n    //Add the styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    };\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`, \r\n                }} className=\"track\">\r\n                    <input \r\n                    min={0} \r\n                    max={songInfo.duration || 0} \r\n                    value={songInfo.currentTime}\r\n                    onChange={dragHandler}\r\n                    type=\"range\"\r\n                    />\r\n                    <div style={trackAnim} className=\"animate-track\"></div>\r\n                </div>  \r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon \r\n                onClick={()=> skipTrackHandler('skip-back')} \r\n                className=\"skip-back\" \r\n                size=\"2x\" \r\n                icon={faAngleLeft} \r\n                />\r\n                <FontAwesomeIcon \r\n                onClick={playSongHandler} \r\n                className=\"play\" size=\"2x\" \r\n                icon={isPlaying ? faPause : faPlay} \r\n                />\r\n                <FontAwesomeIcon \r\n                onClick={()=> skipTrackHandler('skip-forward')} \r\n                className=\"skip-forward\" \r\n                size=\"2x\" \r\n                icon={faAngleRight} \r\n                />\r\n            </div>\r\n           <p>Created by Paris Diaz</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import react from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;","import React from 'react';\r\n\r\n\r\nconst LibrarySong = ({\r\n    song, \r\n    songs, \r\n    setCurrentSong,\r\n     selectedSong, \r\n     id, \r\n     audioRef, \r\n     isPlaying,\r\n     setSongs,\r\n    }) => {\r\n    const songSelectHandler = async () => {\r\n        const selectedSong = songs.filter((state) => state.id === state.id);\r\n        await setCurrentSong(selectedSong[0]);\r\n        //Add active State\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n        //Check if the Song is Playing\r\n        if(isPlaying) audioRef.current.play();\r\n    };\r\n    return (\r\n        <div \r\n        onClick={songSelectHandler} \r\n        className={`library-song ${song.active ? 'selected' : \"\"}`}\r\n        >\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs, setCurrentSong, isPlaying, setSongs, libraryStatus}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => (\r\n                <LibrarySong \r\n                songs={songs}\r\n                setCurrentSong={setCurrentSong} \r\n                song={song}\r\n                id={song.id}\r\n                key={song.id}\r\n                isPlaying={isPlaying}\r\n                setSongs={setSongs}\r\n                />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n    return  (\r\n        <nav>\r\n            <h1>Phase Music Player</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library \r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import { v4 as uuidv4} from \"uuid\";\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Slim Bobby\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/23fdd99adc3e16abcb67b004ea3e748ebf433a49-1024x1024.jpg\",\r\n            artist: \"Avinno\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10315\",\r\n            color: [\"#b03e95\",\"#b3098a\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Creswick\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/23fdd99adc3e16abcb67b004ea3e748ebf433a49-1024x1024.jpg\",\r\n            artist: \"Avinno\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10454\",\r\n            color: [\"#8809b3\", \"#be52e3\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Flushing the Stairs\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/6defa6c89a6902fdd84bccd720c2b8fd29c40990-1024x1024.jpg\",\r\n            artist: \"Leavv\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9917\",\r\n            color: [],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Maple Leaf Pt.2\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n            artist: \"Philanthrope\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10243\",\r\n            color: [],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Soil\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n            artist: \"Philanthrope\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10254\",\r\n            color: [],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Du Bassin au Muret\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/efaa848553d09b4d9fc0752844456e41b34de276-1024x1024.jpg\",\r\n            artist: \"sadtoi\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8810\",\r\n            color: [\"blue\", \"lightblue\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"String Along\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/10/efaa848553d09b4d9fc0752844456e41b34de276-1024x1024.jpg\",\r\n            artist: \"sadtoi\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10315\",\r\n            color: [\"blue\", \"lightblue\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Sleepover\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n            artist: \"Nymano, JK the Sage\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10130\",\r\n            color: [\"purple\", \"pink\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n\r\n        },\r\n        {\r\n            name: \"Mirage\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n            artist: \"Nymano, J'san\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10136\",\r\n            color: [\"purple\", \"pink\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Imagination\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/24bd0da848d9718fd19af104ff5c0b11f914cb25-1024x1024.jpg\",\r\n            artist: \"Montell Fish\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9332\",\r\n            color: [\"lightblue\", \"coral\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default chillHop;","import React, {useState, useRef} from \"react\";\n//Importing Sass Styling\nimport \"./styles/app.scss\";\n//Addition of Components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n//Import Util\nimport data from './data';\n\nfunction App() {\n  //Setting State\n   //ref\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo, \n      currentTime: current, \n      duration, \n      animationPercentage: animation,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      if (isPlaying) audioRef.current.play();\n  };\n\n\n  //Return JSX Statements\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav \n      libraryStatus={libraryStatus}\n      setLibraryStatus={setLibraryStatus}\n      />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying = {isPlaying} \n        currentSong={currentSong} \n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        />\n        <Library \n        setSongs = {setSongs}\n        audioRef={audioRef}\n        songs={songs} \n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        libraryStatus={libraryStatus}\n        />\n        <audio \n            onTimeUpdate={timeUpdateHandler} \n            onLoadedMetadata={timeUpdateHandler}\n            ref={audioRef} \n            src={currentSong.audio}\n            onEnded={songEndHandler}\n            >   \n        </audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}